function Row.new 1
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push argument 1
pop this 2
push this 2
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push argument 0
push constant 0
eq
push argument 0
push constant 31
eq
or
push local 0
push constant 0
eq
or
push local 0
push constant 31
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 0
add
push constant 0
not
push constant 0
not
push constant 0
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 0
push this 0
add
push constant 0
push constant 0
not
push constant 0
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Row.get 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function Row.set 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Row.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 2
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Cell.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Memory.dealloc 1
pop temp 0
push constant 0
return
